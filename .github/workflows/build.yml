name: build

on:
  push:
    branches:
      - main
      - master

env: # Change this if needed
  Rmarkdown-file: template-computo-Rmarkdown.Rmd
  binder-file: environment.yml
  sys-file: system-libs
  add-file: r-addons.R

jobs:
  build_computorticle:
    name: Build Computo article with Rmarkdown
    if: "contains(github.event.head_commit.message, 'do_build')"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checking out repository for Github action
        uses: actions/checkout@v2

      - name: Setting up miniconda with specified Python and R dependencies
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          environment-file: ${{ env.binder-file }}
          activate-environment: computorbuild

      - name: Installing pandoc for R
        uses: r-lib/actions/setup-pandoc@v1 # setup miniconda install pandoc and pandoc-citeproc

      - name: Installing additional system libraries with APT if any
        shell: bash
        if: ${{ env.system.lib }} != ''
        run: xargs -a ${{ env.system-libs }} sudo apt-get install

      - name: Install additional R dependencies
        shell: bash
        run: | 
          export LANG=en_US.UTF-8
          conda run -n computorbuild Rscript ${{ env.add-file }}

      - name: Rendering Rmd file to HTML and PDF
        shell: bash
        run: | 
          export LANG=en_US.UTF-8
          conda run -n computorbuild Rscript -e 'rmarkdown::render(${{ env.Rmarkdown-file }}, output_file = "index.html", output_dir = "output")'
          conda run -n computorbuild Rscript -e 'pagedown::chrome_print("output/index.html", output = "output/article.pdf")'

#      - id: computorticle
#        uses: computorg/build-Rmarkdown@v1
#        with:
#          Rmarkdown-file: ${{ env.Rmarkdown-file }}
#          system-libs-file: ${{ env.sys-file }}
#          r-addons-file: ${{ env.add-file }}
#          conda-name: computorbuild

      - name: Uploading artifacts
        uses: actions/upload-artifact@v2
        with:
          name: built_article
          path: output

      - name: Deploying article on gitHub pages # memo: create a branch for gh-pages first time - see below
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: output

# memo ; create gh-pages first time
# git checkout --orphan gh-pages
# git reset --hard
# git commit --allow-empty -m "Initializing gh-pages branch"
# git push origin gh-pages
# git checkout main
